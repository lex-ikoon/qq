<?xml version="1.0" encoding="UTF-8"?>
<shelfDocument>
  <!-- This file contains definitions of shelves, toolbars, and tools.
 It should not be hand-edited when it is being used by the application.
 Note, that two definitions of the same element are not allowed in
 a single file. -->

  <toolshelf name="wf_job" label="wf_job">
    <memberTool name="wf_job_imports"/>
    <memberTool name="wf_jobify_obj"/>
    <memberTool name="wf_karma"/>
    <memberTool name="wf_find_material"/>
  </toolshelf>

  <tool name="wf_job_imports" label="wf job imports" icon="PLASMA_App">
    <toolMenuContext name="network">
      <contextNetType>SOP</contextNetType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[import wf_job
import imp
imp.reload(wf_job)
node_nulls = hou.selectedNodes()
for node_null in node_nulls :
    wf_job.create_job_import(node_null)]]></script>
  </tool>

  <tool name="wf_jobify_obj" label="wf jobify" icon="PLASMA_App">
    <toolMenuContext name="network">
      <contextNetType>OBJ</contextNetType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[import wf_job
import imp
imp.reload(wf_job)
wf_job.jobify_obj()]]></script>
  </tool>

  <tool name="wf_karma" label="wf karma" icon="PLASMA_App">
    <toolMenuContext name="network">
      <contextNetType>OBJ</contextNetType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[import wf_job
import imp
imp.reload(wf_job)
nodes = hou.selectedNodes()

for node in nodes:
    wf_job.create_job_karma_from_geo(node)]]></script>
  </tool>

  <tool name="wf_find_material" label="wf find material" icon="PLASMA_App">
    <script scriptType="python"><![CDATA[import wf_job_archetype_karma
import imp
imp.reload(wf_job_archetype_karma)
node = hou.selectedNodes()[0]
wf_job_archetype_karma.find_material(node)]]></script>
  </tool>
</shelfDocument>
